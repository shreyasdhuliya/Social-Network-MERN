[{"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\index.js":"1","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\App.js":"2","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Navbar.js":"5","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\store.js":"8","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\index.js":"9","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\types.js":"11","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\alert.js":"12","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Alert.js":"13","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\auth.js":"14","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Dashboard.js":"17","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\routing\\PrivateRoute.js":"18","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\profile.js":"19","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\profile.js":"20","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\EditProfile.js":"24","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\AddExperience.js":"25","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\AddEducation.js":"26","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profiles\\Profiles.js":"29","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profiles\\ProfileItem.js":"30","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\Profile.js":"31","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileTop.js":"32","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileAbout.js":"33","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileExperience.js":"34","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileEducation.js":"35","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileGithub.js":"36","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\post.js":"37","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\Posts.js":"38","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\post.js":"39","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\PostItem.js":"40","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\PostForm.js":"41","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\post\\Post.js":"42"},{"size":478,"mtime":1611841517133,"results":"43","hashOfConfig":"44"},{"size":2343,"mtime":1614406948287,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":1085,"mtime":1612617668227,"results":"47","hashOfConfig":"44"},{"size":1656,"mtime":1614345803253,"results":"48","hashOfConfig":"44"},{"size":3408,"mtime":1612675736883,"results":"49","hashOfConfig":"44"},{"size":2395,"mtime":1612315778866,"results":"50","hashOfConfig":"44"},{"size":408,"mtime":1611971689479,"results":"51","hashOfConfig":"44"},{"size":245,"mtime":1614162177644,"results":"52","hashOfConfig":"44"},{"size":450,"mtime":1611972916567,"results":"53","hashOfConfig":"44"},{"size":960,"mtime":1614405613744,"results":"54","hashOfConfig":"44"},{"size":363,"mtime":1613913120117,"results":"55","hashOfConfig":"44"},{"size":493,"mtime":1611977633566,"results":"56","hashOfConfig":"44"},{"size":2318,"mtime":1612619088965,"results":"57","hashOfConfig":"44"},{"size":1320,"mtime":1613219898489,"results":"58","hashOfConfig":"44"},{"size":258,"mtime":1612251417699,"results":"59","hashOfConfig":"44"},{"size":1897,"mtime":1613923311902,"results":"60","hashOfConfig":"44"},{"size":596,"mtime":1612402772435,"results":"61","hashOfConfig":"44"},{"size":1350,"mtime":1614160545764,"results":"62","hashOfConfig":"44"},{"size":6387,"mtime":1614160598634,"results":"63","hashOfConfig":"44"},{"size":270,"mtime":1612618338997,"results":"64","hashOfConfig":"44"},{"size":6076,"mtime":1612873978713,"results":"65","hashOfConfig":"44"},{"size":637,"mtime":1612707877906,"results":"66","hashOfConfig":"44"},{"size":7372,"mtime":1613922947578,"results":"67","hashOfConfig":"44"},{"size":2913,"mtime":1613923108729,"results":"68","hashOfConfig":"44"},{"size":2900,"mtime":1613923082356,"results":"69","hashOfConfig":"44"},{"size":1554,"mtime":1613222784313,"results":"70","hashOfConfig":"44"},{"size":1525,"mtime":1613222985466,"results":"71","hashOfConfig":"44"},{"size":1281,"mtime":1613912550934,"results":"72","hashOfConfig":"44"},{"size":1128,"mtime":1613911829704,"results":"73","hashOfConfig":"44"},{"size":2770,"mtime":1614159472874,"results":"74","hashOfConfig":"44"},{"size":2173,"mtime":1614147168311,"results":"75","hashOfConfig":"44"},{"size":995,"mtime":1614150612230,"results":"76","hashOfConfig":"44"},{"size":747,"mtime":1614151177718,"results":"77","hashOfConfig":"44"},{"size":743,"mtime":1614151364500,"results":"78","hashOfConfig":"44"},{"size":2256,"mtime":1614160471774,"results":"79","hashOfConfig":"44"},{"size":1430,"mtime":1614405994220,"results":"80","hashOfConfig":"44"},{"size":1101,"mtime":1614404687773,"results":"81","hashOfConfig":"44"},{"size":2880,"mtime":1614405449935,"results":"82","hashOfConfig":"44"},{"size":2095,"mtime":1614405138563,"results":"83","hashOfConfig":"44"},{"size":1079,"mtime":1614404704644,"results":"84","hashOfConfig":"44"},{"size":635,"mtime":1614406866423,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1osn751",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\index.js",[],["183","184"],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\App.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\auth\\Register.js",["185","186"],"import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {setAlert} from '../../actions/alert'\r\nimport {register} from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\nimport {Link, Redirect} from 'react-router-dom'; \r\n\r\n//component\r\nconst Register = ({setAlert, register, isAuthenticated}) => {\r\n\r\nconst [formData, setFormData] = useState({\r\n    name:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    password2:\"\"\r\n});\r\n\r\nconst {name, email, password, password2} = formData;\r\n\r\nconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\nconst onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if(password != password2){\r\n        setAlert(\"passwords do not match\",\"danger\")\r\n    }\r\n    else{\r\n        register({name,email,password});\r\n    }\r\n}\r\n\r\nif(isAuthenticated){\r\n    return <Redirect to=\"/dashboard\" />\r\n}\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                    type=\"text\"\r\n                     placeholder=\"Name\"\r\n                      name=\"name\" \r\n                      value={name}\r\n                      onChange={e =>  onChange(e)}\r\n                      required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={e =>  onChange(e)}\r\n                    required\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\"\r\n                        onChange={e =>  onChange(e)}\r\n                        value={password}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        minLength=\"6\"\r\n                        onChange={e =>  onChange(e)}\r\n                        value={password2}\r\n                        required\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to='/login'>Login</Link>\r\n            </p>\r\n        </>\r\n    )\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated:state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setAlert, register})(Register)\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\auth\\Login.js",["187"],"import React,{useState} from 'react';\r\nimport {Link, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../actions/auth'\r\n\r\nimport axios from 'axios';\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n\r\nconst [formData, setFormData] = useState({\r\n \r\n    email:\"\",\r\n    password:\"\"\r\n});\r\n\r\nconst { email, password } = formData;\r\n\r\nconst onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\nconst onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email,password)\r\n}\r\n\r\n//redirect if logged in\r\nif(isAuthenticated){\r\n    return <Redirect to=\"/dashboard\" />\r\n}\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">Sign In</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                \r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={e =>  onChange(e)}\r\n                    required\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\"\r\n                        onChange={e =>  onChange(e)}\r\n                        value={password}\r\n                        required\r\n                    />\r\n                </div>\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated:state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\store.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\index.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\alert.js",["188"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\r\n//takes function, and action\r\n\r\nconst initialState = [];\r\n\r\n\r\nexport default function(state = initialState, action){\r\n\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload)\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\types.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\alert.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\auth.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\auth.js",["189"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    loading: true,\r\n    user:null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    \r\n    const {type, payload} = action;\r\n    \r\n    switch(type) {\r\n        case USER_LOADED:\r\n            return  {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                user:payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated:true,\r\n                loading:false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token')\r\n            return  {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\profile.js",["190"],"import { GET_PROFILE,GET_PROFILES, PROFILE_ERROR,CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS } from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    profile:null,\r\n    profiles:[],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile:payload,\r\n                loading:false\r\n            }\r\n        case  GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles: payload,\r\n                loading:false\r\n            }\r\n        case PROFILE_ERROR: \r\n            return{\r\n                ...state,\r\n                error:payload,\r\n                loading:false,\r\n                profile:null\r\n            };\r\n            case CLEAR_PROFILE:\r\n                return {\r\n                    ...state,\r\n                    profile:null,\r\n                    repos: [],\r\n                    loading:false\r\n                }\r\n                case GET_REPOS:\r\n                    return{\r\n                        ...state,\r\n                        repos:payload,\r\n                        loading:false\r\n                    }\r\n        default: \r\n            return state;\r\n    }\r\n}","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\profile.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\layout\\Spinner.js",["191"],"import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <>\r\n        <img \r\n            src={spinner}\r\n            style={{width:'100px', margin:'auto', display:'block'}}\r\n            alt = \"loading...\" \r\n            />\r\n    </>\r\n)","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\EditProfile.js",["192"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\r\n\r\nconst EditProfile = ({profile:{profile, loading},createProfile, history, getCurrentProfile}) => {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        company:'',\r\n        website:'',\r\n        location: '',\r\n        status:'',\r\n        skills:'',\r\n        githubusername: '',\r\n        bio:'',\r\n        twitter:'',\r\n        facebook:'',\r\n        linkedin:'',\r\n        youtube:'',\r\n        instagram:''\r\n\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] =useState(false)\r\n\r\n    useEffect(() => {\r\n      getCurrentProfile();\r\n\r\n      setFormData ({\r\n        company: loading || !profile.company ? '': profile.company,\r\n        website: loading || !profile.website ? '':profile.website,\r\n        location: loading || !profile.location ? '':profile.location,\r\n        status: loading || !profile.status ? '':profile.status,\r\n        skills: loading || !profile.skills ? '':profile.skills.join(','),\r\n        githubusername: loading || !profile.githubusername ? '':profile.githubusername,\r\n        bio: loading || !profile.bio ? '':profile.bio,\r\n        twitter: loading || !profile.social ? '':profile.social.twitter,\r\n        facebook: loading || !profile.social ? '':profile.social.facebook,\r\n        linkedin: loading || !profile.social ? '':profile.social.linkedin,\r\n        youtube: loading || !profile.social ? '':profile.social.youtube,\r\n        instagram: loading || !profile.social ? '':profile.social.instagram,\r\n      }) \r\n    }, [loading, getCurrentProfile])//re-run effect if loading changes\r\n\r\n    const  {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio}  onChange={e => onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button  onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && <> \r\n            <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}  />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"  value={facebook} onChange={e => onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n        </div>\r\n        </>}\r\n\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n        </>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile:state.profile\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile-forms\\AddEducation.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profiles\\ProfileItem.js",["193"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProfileItem = ({\r\n    profile:{\r\n    user: {_id, name, avatar},\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n}}) => {\r\n    return (\r\n        <div className=\"profile  bg-light\">\r\n            <img className=\"round-img\" alt=\"\" src={avatar} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status}{company && <span>at {company}</span>}</p>\r\n                <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className=\"btn  btn-primary\" >\r\n                    view Profile\r\n                </Link>\r\n                </div>\r\n                <ul>\r\n                    {skills.slice(0,4).map((skill, index) =>(\r\n                       <li key={index} className=\"text-primary\">\r\n                           <i className=\"fas fa-check\"></i> {skill}\r\n                       </li> \r\n                    ) )}\r\n                </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileItem\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\Profile.js",["194"],"import React,{useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Profile = ({getProfileById, profile: {profile,loading}, auth, match}) => {\r\nuseEffect(() => {\r\n    console.log(match.params.id)\r\n    getProfileById(match.params.id);\r\n}, [getProfileById]);\r\n\r\n    return (\r\n        <>\r\n         {profile === null || loading ? <Spinner /> : <> \r\n         <Link to=\"/profiles\" className=\"btn btn-light\">Back to profiles</Link>\r\n         {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to='/edit-profile' className=\"btn btn-dark\">Edit profile</Link>)}\r\n         <div className=\"profile-grid my-1\">\r\n                <ProfileTop profile={profile} />\r\n                <ProfileAbout profile={profile} />\r\n                <div className=\"profile-exp bg-white p-2\">\r\n                    <h2 className=\"text-primary\">\r\n                        Experience\r\n                    </h2>\r\n                    {profile.experience.length > 0 ? (<>\r\n                    {profile.experience.map(experience => (\r\n                     <ProfileExperience key={experience._id} experience={experience} />   \r\n                     \r\n                    ))}\r\n                    </>): (<h4> No experiecne credentials</h4>)}\r\n                </div>\r\n                <div className=\"profile-edu bg-white p-2\">\r\n                    <h2 className=\"text-primary\">\r\n                        Education\r\n                    </h2>\r\n                    {profile.education.length > 0 ? (<>\r\n                    {profile.education.map(education => (\r\n                     <ProfileEducation key={education._id} education={education} />   \r\n                     \r\n                    ))}\r\n                    </>): (<h4> No education credentials</h4>)}\r\n                </div>\r\n                {/*git hub repos*/}\r\n                {profile.githubusername && (\r\n                    <ProfileGithub username={profile.githubusername}/>\r\n                )}\r\n         </div>\r\n         \r\n         </>}\r\n        </>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile:state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {  getProfileById })(Profile)\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileExperience.js",["195"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExperience = ({\r\n    experience: {company, title, location, current, to, from, description}\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? ' Now' :  <Moment format=\"YYYY/MM/DD\">{to}</Moment> }\r\n            </p>\r\n            <p>\r\n                <strong>Position:</strong> {title}\r\n            </p>\r\n            <p>\r\n            <strong>Desc:</strong> {description}\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileExperience\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileEducation.js",["196"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileEducation = ({\r\n    education: {company, title, location, current, to, from, description}\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? ' Now' :  <Moment format=\"YYYY/MM/DD\">{to}</Moment> }\r\n            </p>\r\n            <p>\r\n                <strong>Position:</strong> {title}\r\n            </p>\r\n            <p>\r\n            <strong>Desc:</strong> {description}\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileEducation\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\profile\\ProfileGithub.js",["197"],"import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {getGithubRepos} from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner'; \r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\r\n\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    },[getGithubRepos])\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {\r\n                repos === null ? <Spinner />: (\r\n                    repos.map((repo,i) => (\r\n                        <div key={i} className=\"repo bg-white p-1 my-1\">\r\n                           <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>\r\n                                {repo.description}\r\n                            </p>\r\n                            </div>\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">\r\n                                         Stars: {repo.stargazers_count}\r\n                                    </li>\r\n                                    <li className=\"badge badge-dark\">\r\n                                         Watchers: {repo.watchers_count}\r\n                                    </li>\r\n                                    <li className=\"badge badge-dark\">\r\n                                         Forks: {repo.forks_count}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\ngetGithubRepos: PropTypes.func.isRequired,\r\nrepos:PropTypes.array.isRequired,\r\nusername: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);\r\n","C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\reducers\\post.js",["198"],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\actions\\post.js",["199"],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\Shreyas\\react\\react projects\\udemyMERN_1\\client\\src\\components\\post\\Post.js",["200","201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":25,"column":17,"nodeType":"212","messageId":"213","endLine":25,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":7,"column":1,"nodeType":"216","endLine":20,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":19,"column":1,"nodeType":"216","endLine":55,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":12,"column":1,"nodeType":"216","endLine":52,"endColumn":2},{"ruleId":"214","severity":1,"message":"217","line":4,"column":1,"nodeType":"216","endLine":12,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":44,"column":8,"nodeType":"220","endLine":44,"endColumn":36,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":17},{"ruleId":"218","severity":1,"message":"223","line":18,"column":4,"nodeType":"220","endLine":18,"endColumn":20,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"222","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":17},{"ruleId":"206","severity":1,"message":"222","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":17},{"ruleId":"218","severity":1,"message":"225","line":11,"column":7,"nodeType":"220","endLine":11,"endColumn":23,"suggestions":"226"},{"ruleId":"214","severity":1,"message":"215","line":17,"column":1,"nodeType":"216","endLine":60,"endColumn":2},{"ruleId":"206","severity":1,"message":"227","line":66,"column":15,"nodeType":"208","messageId":"209","endLine":66,"endColumn":18},{"ruleId":"206","severity":1,"message":"228","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":15},{"ruleId":"218","severity":1,"message":"223","line":10,"column":4,"nodeType":"220","endLine":10,"endColumn":13,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["232"],"'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["234"],"'res' is assigned a value but never used.","'Spinner' is defined but never used.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"244","text":"245"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"246","text":"247"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"248","text":"249"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"250","text":"251"},[1713,1741],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[666,682],"[getProfileById, match.params.id]",[342,358],"[getGithubRepos, username]",[317,326],"[getPost, match.params.id]"]